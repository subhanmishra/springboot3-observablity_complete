server:
  port: 9000

#logging:
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
logging:
  pattern:
    correlation: '[${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus, circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
          client:
            requests: true
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0

spring:
  output.ansi.enabled: ALWAYS
  application:
    name: gateway
  threads:
    virtual:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          gateway-client:
            provider: spring
            client-id: client
            client-secret: secret
            scope:
              - user.read
              - user.write
              - openid
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          spring:
            issuer-uri: http://localhost:8085

  cloud:
    gateway:
      metrics:
        enabled: true
      default-filters:
        - SaveSession
        - TokenRelay
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
      routes:
        - id: loan-route
          uri: http://localhost:8080
          predicates:
            - Path=/loan/**
            - Method=GET,POST
          filters:
            - AddRequestHeader=X-Tenant,acme
            - AddResponseHeader=X-Genre,fantasy
            - name: CircuitBreaker
              args:
                name: loanService
                fallbackUri: forward:/loan-fallback
            - name: Retry
              args:
                retries: 3
                method: GET
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

resilience4j:
  circuitbreaker:
    instances:
      loanService:
        sliding-window-type: count_based
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        waitDurationInOpenState: 5000
        registerHealthIndicator: true
        ignoreExceptions:
          # Ignore 4xx exceptions.
          - org.springframework.web.client.HttpClientErrorException
  timelimiter:
    instances:
      loanService:
        timeoutDuration: 3s

